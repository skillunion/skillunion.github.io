Ext.data.JsonP.Ext_Factory({"tagname":"class","name":"Ext.Factory","autodetected":{},"files":[{"filename":"Factoryable.js","href":"Factoryable.html#Ext-Factory"}],"since":"5.0.0","members":[{"name":"aliasPrefix","tagname":"cfg","owner":"Ext.Factory","id":"cfg-aliasPrefix","meta":{}},{"name":"creator","tagname":"cfg","owner":"Ext.Factory","id":"cfg-creator","meta":{}},{"name":"defaultProperty","tagname":"cfg","owner":"Ext.Factory","id":"cfg-defaultProperty","meta":{}},{"name":"defaultType","tagname":"cfg","owner":"Ext.Factory","id":"cfg-defaultType","meta":{}},{"name":"instanceProp","tagname":"cfg","owner":"Ext.Factory","id":"cfg-instanceProp","meta":{}},{"name":"typeProperty","tagname":"cfg","owner":"Ext.Factory","id":"cfg-typeProperty","meta":{}},{"name":"xclass","tagname":"cfg","owner":"Ext.Factory","id":"cfg-xclass","meta":{}},{"name":"defaultClass","tagname":"property","owner":"Ext.Factory","id":"property-defaultClass","meta":{"private":true,"readonly":true}},{"name":"create","tagname":"method","owner":"Ext.Factory","id":"method-create","meta":{}},{"name":"dataIdentifier","tagname":"method","owner":"Ext.Factory","id":"method-dataIdentifier","meta":{}},{"name":"hook","tagname":"method","owner":"Ext.Factory","id":"method-hook","meta":{"private":true}},{"name":"update","tagname":"method","owner":"Ext.Factory","id":"method-update","meta":{}},{"name":"define","tagname":"method","owner":"Ext.Factory","id":"static-method-define","meta":{"static":true}}],"alternateClassNames":[],"aliases":{},"id":"class-Ext.Factory","short_doc":"Manages factories for families of classes (classes with a common alias prefix). ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Factoryable.html#Ext-Factory' target='_blank'>Factoryable.js</a></div></pre><div class='doc-contents'><p>Manages factories for families of classes (classes with a common <code>alias</code> prefix). The\nfactory for a class family is a function stored as a <code>static</code> on <code><a href=\"#!/api/Ext.Factory\" rel=\"Ext.Factory\" class=\"docClass\">Ext.Factory</a></code>. These\nare created either by directly calling <code><a href=\"#!/api/Ext.Factory-static-method-define\" rel=\"Ext.Factory-static-method-define\" class=\"docClass\">Ext.Factory.define</a></code> or by using the\n<code><a href=\"#!/api/Ext.mixin.Factoryable\" rel=\"Ext.mixin.Factoryable\" class=\"docClass\">Ext.mixin.Factoryable</a></code> interface.</p>\n\n<p>To illustrate, consider the layout system's use of aliases. The <code>hbox</code> layout maps to\nthe <code>\"layout.hbox\"</code> alias that one typically provides via the <code>layout</code> config on a\nContainer.</p>\n\n<p>Under the covers this maps to a call like this:</p>\n\n<pre><code> Ext.Factory.layout('hbox');\n</code></pre>\n\n<p>Or possibly:</p>\n\n<pre><code> Ext.Factory.layout({\n     type: 'hbox'\n });\n</code></pre>\n\n<p>The value of the <code>layout</code> config is passed to the <code>Ext.Factory.layout</code> function. The\nexact signature of a factory method matches <code>method!create</code>.</p>\n\n<p>To define this factory directly, one could call <code><a href=\"#!/api/Ext.Factory-static-method-define\" rel=\"Ext.Factory-static-method-define\" class=\"docClass\">Ext.Factory.define</a></code> like so:</p>\n\n<pre><code> <a href=\"#!/api/Ext.Factory-static-method-define\" rel=\"Ext.Factory-static-method-define\" class=\"docClass\">Ext.Factory.define</a>('layout', 'auto');  // \"layout.auto\" is the default type\n</code></pre>\n        <p>Available since: <b>5.0.0</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-aliasPrefix' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Factory'>Ext.Factory</span><br/><a href='source/Factoryable.html#Ext-Factory-cfg-aliasPrefix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Factory-cfg-aliasPrefix' class='name expandable'>aliasPrefix</a> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"></span></div><div class='description'><div class='short'>The prefix to apply to type values to form a complete alias. ...</div><div class='long'><p>The prefix to apply to <code>type</code> values to form a complete alias. This defaults to the\nproper value in most all cases and should not need to be specified.</p>\n        <p>Available since: <b>5.0.0</b></p>\n</div></div></div><div id='cfg-creator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Factory'>Ext.Factory</span><br/><a href='source/Factoryable.html#Ext-Factory-cfg-creator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Factory-cfg-creator' class='name expandable'>creator</a> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"></span></div><div class='description'><div class='short'>The name of the method used to prepare config objects for creation. ...</div><div class='long'><p>The name of the method used to prepare config objects for creation. This defaults\nto <code>'create'</code> plus the capitalized name (e.g., <code>'createLayout'</code> for the 'laoyut'\nalias family).</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n</div></div></div><div id='cfg-defaultProperty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Factory'>Ext.Factory</span><br/><a href='source/Factoryable.html#Ext-Factory-cfg-defaultProperty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Factory-cfg-defaultProperty' class='name expandable'>defaultProperty</a> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"></span></div><div class='description'><div class='short'>The config property to set when the factory is given a config that is a string. ...</div><div class='long'><p>The config property to set when the factory is given a config that is a string.</p>\n<p>Defaults to: <code>&quot;type&quot;</code></p>        <p>Available since: <b>5.0.0</b></p>\n</div></div></div><div id='cfg-defaultType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Factory'>Ext.Factory</span><br/><a href='source/Factoryable.html#Ext-Factory-cfg-defaultType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Factory-cfg-defaultType' class='name expandable'>defaultType</a> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"></span></div><div class='description'><div class='short'>An optional type to use if none is given to the factory at invocation. ...</div><div class='long'><p>An optional type to use if none is given to the factory at invocation. This is a\nsuffix added to the <code>aliasPrefix</code>. For example, if <code>aliasPrefix=\"layout.\"</code> and\n<code>defaultType=\"hbox\"</code> the default alias is <code>\"layout.hbox\"</code>. This is an alternative\nto <code>xclass</code> so only one should be provided.</p>\n<p>Defaults to: <code>null</code></p>        <p>Available since: <b>5.0.0</b></p>\n</div></div></div><div id='cfg-instanceProp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Factory'>Ext.Factory</span><br/><a href='source/Factoryable.html#Ext-Factory-cfg-instanceProp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Factory-cfg-instanceProp' class='name expandable'>instanceProp</a> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"></span></div><div class='description'><div class='short'>The property that identifies an object as instance vs a config. ...</div><div class='long'><p>The property that identifies an object as instance vs a config.</p>\n<p>Defaults to: <code>&quot;isInstance&quot;</code></p>        <p>Available since: <b>5.0.0</b></p>\n</div></div></div><div id='cfg-typeProperty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Factory'>Ext.Factory</span><br/><a href='source/Factoryable.html#Ext-Factory-cfg-typeProperty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Factory-cfg-typeProperty' class='name expandable'>typeProperty</a> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"></span></div><div class='description'><div class='short'>The property from which to read the type alias suffix. ...</div><div class='long'><p>The property from which to read the type alias suffix.</p>\n<p>Defaults to: <code>&quot;type&quot;</code></p>        <p>Available since: <b>6.5.0</b></p>\n</div></div></div><div id='cfg-xclass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Factory'>Ext.Factory</span><br/><a href='source/Factoryable.html#Ext-Factory-cfg-xclass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Factory-cfg-xclass' class='name expandable'>xclass</a> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"></span></div><div class='description'><div class='short'>The full classname of the type of instance to create when none is provided to the\nfactory. ...</div><div class='long'><p>The full classname of the type of instance to create when none is provided to the\nfactory. This is an alternative to <code>defaultType</code> so only one should be specified.</p>\n<p>Defaults to: <code>null</code></p>        <p>Available since: <b>5.0.0</b></p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-defaultClass' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Factory'>Ext.Factory</span><br/><a href='source/Factoryable.html#Ext-Factory-property-defaultClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Factory-property-defaultClass' class='name expandable'>defaultClass</a> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><span class=\"signature\"><span class='private' >private</span><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>The Class reference of the type of instance to create when none is provided to the\nfactory. ...</div><div class='long'><p>The Class reference of the type of instance to create when none is provided to the\nfactory. This property is set from <code>xclass</code> when the factory instance is created.</p>\n<p>Defaults to: <code>null</code></p>        <p>Available since: <b>5.0.0</b></p>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-create' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Factory'>Ext.Factory</span><br/><a href='source/Factoryable.html#Ext-Factory-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Factory-method-create' class='name expandable'>create</a>( <span class='pre'>[config], [defaultType]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Creates an instance of this class family given configuration options. ...</div><div class='long'><p>Creates an instance of this class family given configuration options.</p>\n        <p>Available since: <b>5.0.0</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>The configuration or instance (if an Object) or\njust the type (if a String) describing the instance to create.</p>\n<ul><li><span class='pre'>xclass</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>The full class name of the class to create.</p>\n</div></li><li><span class='pre'>type</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>The type string to add to the alias prefix for this\nfactory.</p>\n</div></li></ul></div></li><li><span class='pre'>defaultType</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>The type to create if no type is contained in the\n<code>config</code>, or an object containing a default set of configs.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>The newly created instance.</p>\n</div></li></ul></div></div></div><div id='method-dataIdentifier' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Factory'>Ext.Factory</span><br/><a href='source/Generator.html#Ext-Factory-method-dataIdentifier' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Factory-method-dataIdentifier' class='name expandable'>dataIdentifier</a>( <span class='pre'>config</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an instance of an ID generator based on the ID you pass in. ...</div><div class='long'><p>Returns an instance of an ID generator based on the ID you pass in.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The config object or <code>id</code> to lookup.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>Ext.data.identifier.* The data identifier</p>\n</div></li></ul></div></div></div><div id='method-hook' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Factory'>Ext.Factory</span><br/><a href='source/Factoryable.html#Ext-Factory-method-hook' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Factory-method-hook' class='name expandable'>hook</a>( <span class='pre'>fn</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Sets a hook on the creation process. ...</div><div class='long'><p>Sets a hook on the creation process. If the hook <code>fn</code> returns <code>undefined</code> then\nthe original <code>create</code> method is called.</p>\n        <p>Available since: <b>6.5.0</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The hook function to call when <code>create</code> is invoked.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>original</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The original <code>create</code> method.</p>\n</div></li><li><span class='pre'>config</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>See create.</p>\n</div></li><li><span class='pre'>defaultType</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>See create.</p>\n</div></li></ul></div></li></ul></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Factory'>Ext.Factory</span><br/><a href='source/Factoryable.html#Ext-Factory-method-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Factory-method-update' class='name expandable'>update</a>( <span class='pre'>instance, config, [creator], [creatorMethod], [defaultsConfig]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"></span></div><div class='description'><div class='short'>This method accepts a config object and an existing instance if one exists\n(can be null). ...</div><div class='long'><p>This method accepts a <code>config</code> object and an existing <code>instance</code> if one exists\n(can be <code>null</code>).</p>\n\n<p>The details are best explained by example:</p>\n\n<pre><code> config: {\n     header: {\n         xtype: 'itemheader'\n     }\n },\n\n applyHeader: function (header, oldHeader) {\n     return Ext.Factory.widget.update(oldHeader, header,\n         this, 'createHeader');\n },\n\n createHeader: function (header) {\n     return <a href=\"#!/api/Ext-method-apply\" rel=\"Ext-method-apply\" class=\"docClass\">Ext.apply</a>({\n         xtype: 'itemheader',\n         ownerCmp: this\n     }, header);\n }\n</code></pre>\n\n<p>Normally the <code>applyHeader</code> method would have to coordinate potential reuse of\nthe <code>oldHeader</code> and perhaps call <code>setConfig</code> on it with the new <code>header</code> config\noptions. If there was no <code>oldHeader</code>, of course, a new instance must be created\ninstead. These details are handled by this method. If the <code>oldHeader</code> is not\nreused, it will be destroyed.</p>\n\n<p>For derived class flexibility, the pattern of calling out to a \"creator\" method\nthat only returns the config object has become widely used in many components.\nThis pattern is also covered in this method. The goal is to allow the derived\nclass to <code>callParent</code> and yet not end up with an instantiated component (since\nthe type may not yet be known).</p>\n\n<p>This mechanism should be used in favor of <code><a href=\"#!/api/Ext-method-factory\" rel=\"Ext-method-factory\" class=\"docClass\">Ext.factory</a>()</code>.</p>\n        <p>Available since: <b>6.5.0</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>instance</span> : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><div class='sub-desc'>\n</div></li><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The configuration (see method!create).</p>\n\n</div></li><li><span class='pre'>creator</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>If passed, this object must provide the <code>creator</code>\nmethod or the <code>creatorMethod</code> parameter.</p>\n\n</div></li><li><span class='pre'>creatorMethod</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>The name of a creation wrapper method on the\ngiven <code>creator</code> instance that \"upgrades\" the raw <code>config</code> object into a final\nform for creation.</p>\n\n</div></li><li><span class='pre'>defaultsConfig</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>The name of a config property (on the provided\n<code>creator</code> instance) that contains defaults to be used to create instances. These\ndefaults are present in the config object passed to the <code>creatorMethod</code>.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>The reconfigured <code>instance</code> or a newly created one.</p>\n\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-define' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Factory'>Ext.Factory</span><br/><a href='source/Factoryable.html#Ext-Factory-static-method-define' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Factory-static-method-define' class='name expandable'>define</a>( <span class='pre'>type, [config]</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>For example, the layout alias family could be defined like this:\n\n Ext.Factory.define('layout', {\n     defaultType: '...</div><div class='long'><p>For example, the layout alias family could be defined like this:</p>\n\n<pre><code> <a href=\"#!/api/Ext.Factory-static-method-define\" rel=\"Ext.Factory-static-method-define\" class=\"docClass\">Ext.Factory.define</a>('layout', {\n     defaultType: 'auto'\n });\n</code></pre>\n\n<p>To define multiple families at once:</p>\n\n<pre><code> <a href=\"#!/api/Ext.Factory-static-method-define\" rel=\"Ext.Factory-static-method-define\" class=\"docClass\">Ext.Factory.define</a>({\n     layout: {\n         defaultType: 'auto'\n     }\n });\n</code></pre>\n        <p>Available since: <b>5.0.0</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The alias family (e.g., \"layout\").</p>\n</div></li><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>An object specifying the config for the <code><a href=\"#!/api/Ext.Factory\" rel=\"Ext.Factory\" class=\"docClass\">Ext.Factory</a></code>\nto be created. If a string is passed it is treated as the <code>defaultType</code>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});