Ext.data.JsonP.Ext_mixin_Keyboard({"tagname":"class","name":"Ext.mixin.Keyboard","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"Keyboard.js","href":"Keyboard.html#Ext-mixin-Keyboard"}],"since":"6.2.0","aliases":{},"alternateClassNames":[],"extends":"Ext.Mixin","mixins":[],"requires":[],"uses":[],"members":[{"name":"keyMap","tagname":"cfg","owner":"Ext.mixin.Keyboard","id":"cfg-keyMap","meta":{}},{"name":"keyMapEnabled","tagname":"cfg","owner":"Ext.mixin.Keyboard","id":"cfg-keyMapEnabled","meta":{}},{"name":"keyMapTarget","tagname":"cfg","owner":"Ext.mixin.Keyboard","id":"cfg-keyMapTarget","meta":{"protected":true}},{"name":"$className","tagname":"property","owner":"Ext.Base","id":"property-S-className","meta":{"private":true}},{"name":"$configPrefixed","tagname":"property","owner":"Ext.Base","id":"property-S-configPrefixed","meta":{"private":true}},{"name":"$configStrict","tagname":"property","owner":"Ext.Base","id":"property-S-configStrict","meta":{"private":true}},{"name":"clearPropertiesOnDestroy","tagname":"property","owner":"Ext.Base","id":"property-clearPropertiesOnDestroy","meta":{"protected":true}},{"name":"clearPrototypeOnDestroy","tagname":"property","owner":"Ext.Base","id":"property-clearPrototypeOnDestroy","meta":{"private":true}},{"name":"destroyed","tagname":"property","owner":"Ext.Base","id":"property-destroyed","meta":{"protected":true}},{"name":"isConfiguring","tagname":"property","owner":"Ext.Base","id":"property-isConfiguring","meta":{"protected":true,"readonly":true}},{"name":"isFirstInstance","tagname":"property","owner":"Ext.Base","id":"property-isFirstInstance","meta":{"protected":true,"readonly":true}},{"name":"isInstance","tagname":"property","owner":"Ext.Base","id":"property-isInstance","meta":{"protected":true,"readonly":true}},{"name":"mixinConfig","tagname":"property","owner":"Ext.mixin.Keyboard","id":"property-mixinConfig","meta":{"private":true}},{"name":"privates","tagname":"property","owner":"Ext.mixin.Keyboard","id":"property-privates","meta":{"private":true}},{"name":"self","tagname":"property","owner":"Ext.Base","id":"property-self","meta":{"protected":true}},{"name":"$onExtended","tagname":"property","owner":"Ext.Base","id":"static-property-S-onExtended","meta":{"private":true,"static":true}},{"name":"addDeprecations","tagname":"method","owner":"Ext.Base","id":"method-addDeprecations","meta":{"private":true}},{"name":"applyKeyMap","tagname":"method","owner":"Ext.mixin.Keyboard","id":"method-applyKeyMap","meta":{"private":true}},{"name":"callOverridden","tagname":"method","owner":"Ext.Base","id":"method-callOverridden","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n","version":"4.1.0"},"protected":true}},{"name":"callParent","tagname":"method","owner":"Ext.Base","id":"method-callParent","meta":{"protected":true}},{"name":"callSuper","tagname":"method","owner":"Ext.Base","id":"method-callSuper","meta":{"protected":true}},{"name":"destroy","tagname":"method","owner":"Ext.Base","id":"method-destroy","meta":{}},{"name":"destroyMembers","tagname":"method","owner":"Ext.Base","id":"method-destroyMembers","meta":{}},{"name":"disableKeyMapGroup","tagname":"method","owner":"Ext.mixin.Keyboard","id":"method-disableKeyMapGroup","meta":{"private":true}},{"name":"enableKeyMapGroup","tagname":"method","owner":"Ext.mixin.Keyboard","id":"method-enableKeyMapGroup","meta":{"private":true}},{"name":"getConfig","tagname":"method","owner":"Ext.Base","id":"method-getConfig","meta":{}},{"name":"getCurrentConfig","tagname":"method","owner":"Ext.Base","id":"method-getCurrentConfig","meta":{"private":true}},{"name":"getInitialConfig","tagname":"method","owner":"Ext.Base","id":"method-getInitialConfig","meta":{}},{"name":"getKeyMap","tagname":"method","owner":"Ext.mixin.Keyboard","id":"method-getKeyMap","meta":{}},{"name":"getKeyMapEnabled","tagname":"method","owner":"Ext.mixin.Keyboard","id":"method-getKeyMapEnabled","meta":{}},{"name":"hasConfig","tagname":"method","owner":"Ext.Base","id":"method-hasConfig","meta":{"private":true}},{"name":"initConfig","tagname":"method","owner":"Ext.Base","id":"method-initConfig","meta":{"chainable":true,"protected":true}},{"name":"initKeyMap","tagname":"method","owner":"Ext.mixin.Keyboard","id":"method-initKeyMap","meta":{"protected":true}},{"name":"link","tagname":"method","owner":"Ext.Base","id":"method-link","meta":{"private":true}},{"name":"onClassExtended","tagname":"method","owner":"Ext.Mixin","id":"method-onClassExtended","meta":{"private":true}},{"name":"setConfig","tagname":"method","owner":"Ext.Base","id":"method-setConfig","meta":{"chainable":true}},{"name":"setKeyMap","tagname":"method","owner":"Ext.mixin.Keyboard","id":"method-setKeyMap","meta":{}},{"name":"setKeyMapEnabled","tagname":"method","owner":"Ext.mixin.Keyboard","id":"method-setKeyMapEnabled","meta":{}},{"name":"setKeyMapGroupEnabled","tagname":"method","owner":"Ext.mixin.Keyboard","id":"method-setKeyMapGroupEnabled","meta":{"private":true}},{"name":"statics","tagname":"method","owner":"Ext.Base","id":"method-statics","meta":{"protected":true}},{"name":"unlink","tagname":"method","owner":"Ext.Base","id":"method-unlink","meta":{"chainable":true,"private":true}},{"name":"updateKeyMapEnabled","tagname":"method","owner":"Ext.mixin.Keyboard","id":"method-updateKeyMapEnabled","meta":{"private":true}},{"name":"addConfig","tagname":"method","owner":"Ext.Base","id":"static-method-addConfig","meta":{"private":true,"static":true}},{"name":"addInheritableStatics","tagname":"method","owner":"Ext.Base","id":"static-method-addInheritableStatics","meta":{"private":true,"static":true}},{"name":"addMember","tagname":"method","owner":"Ext.Base","id":"static-method-addMember","meta":{"chainable":true,"private":true,"static":true}},{"name":"addMembers","tagname":"method","owner":"Ext.Base","id":"static-method-addMembers","meta":{"chainable":true,"static":true}},{"name":"addStatics","tagname":"method","owner":"Ext.Base","id":"static-method-addStatics","meta":{"chainable":true,"static":true}},{"name":"borrow","tagname":"method","owner":"Ext.Base","id":"static-method-borrow","meta":{"private":true,"static":true}},{"name":"callParent","tagname":"method","owner":"Ext.Base","id":"static-method-callParent","meta":{"protected":true,"static":true}},{"name":"callSuper","tagname":"method","owner":"Ext.Base","id":"static-method-callSuper","meta":{"protected":true,"static":true}},{"name":"create","tagname":"method","owner":"Ext.Base","id":"static-method-create","meta":{"static":true}},{"name":"createAlias","tagname":"method","owner":"Ext.Base","id":"static-method-createAlias","meta":{"static":true}},{"name":"extend","tagname":"method","owner":"Ext.Base","id":"static-method-extend","meta":{"private":true,"static":true}},{"name":"getConfigurator","tagname":"method","owner":"Ext.Base","id":"static-method-getConfigurator","meta":{"private":true,"static":true}},{"name":"getName","tagname":"method","owner":"Ext.Base","id":"static-method-getName","meta":{"static":true}},{"name":"mixin","tagname":"method","owner":"Ext.Base","id":"static-method-mixin","meta":{"private":true,"static":true}},{"name":"onExtended","tagname":"method","owner":"Ext.Base","id":"static-method-onExtended","meta":{"chainable":true,"private":true,"static":true}},{"name":"override","tagname":"method","owner":"Ext.Base","id":"static-method-override","meta":{"static":true}},{"name":"triggerExtended","tagname":"method","owner":"Ext.Base","id":"static-method-triggerExtended","meta":{"private":true,"static":true}}],"code_type":"ext_define","id":"class-Ext.mixin.Keyboard","short_doc":"A mixin for components that need to interact with the keyboard. ...","classIcon":"icon-class","superclasses":["Ext.Base","Ext.Mixin"],"subclasses":[],"mixedInto":["Ext.Component","Ext.Widget"],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Ext.Base' rel='Ext.Base' class='docClass'>Ext.Base</a><div class='subclass '><a href='#!/api/Ext.Mixin' rel='Ext.Mixin' class='docClass'>Ext.Mixin</a><div class='subclass '><strong>Ext.mixin.Keyboard</strong></div></div></div><h4>Mixed into</h4><div class='dependency'><a href='#!/api/Ext.Component' rel='Ext.Component' class='docClass'>Ext.Component</a></div><div class='dependency'><a href='#!/api/Ext.Widget' rel='Ext.Widget' class='docClass'>Ext.Widget</a></div><h4>Files</h4><div class='dependency'><a href='source/Keyboard.html#Ext-mixin-Keyboard' target='_blank'>Keyboard.js</a></div></pre><div class='doc-contents'><p>A mixin for components that need to interact with the keyboard. The primary config\nfor this class is the <code><a href=\"#!/api/Ext.mixin.Keyboard-cfg-keyMap\" rel=\"Ext.mixin.Keyboard-cfg-keyMap\" class=\"docClass\">keyMap</a></code> config. This config is an object\nwith key names as its properties and with values that describe how the key event\nshould be handled.</p>\n\n<p>Key names may key name as documented in <code><a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a></code>, numbers (which are treated\nas <code>keyCode</code> values), single characters (for those that are not defined in\n<code><a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a></code>) or <code>charCode</code> values prefixed by '#' (e.g., \"#65\" for <code>charCode=65</code>).</p>\n\n<p>Entries that use a <code>keyCode</code> will be processed in a <code>keydown</code> event listener, while\nthose that use a <code>charCode</code> will be processed in <code>keypress</code>. This can be overridden\nif the <code>keyMap</code> entry specifies an <code>event</code> property.</p>\n\n<p>Key names may be preceded by key modifiers. The modifier keys can be specified\nby prepending the modifier name to the key name separated by <code>+</code> or <code>-</code> (e.g.,\n\"Ctrl+A\" or \"Ctrl-A\"). Only one of these delimiters can be used in a given\nentry.</p>\n\n<p>Valid modifier names are:</p>\n\n<ul>\n<li>Alt</li>\n<li>Shift</li>\n<li>Control (or \"Ctrl\" for short)</li>\n<li>Command (or \"Cmd\" or \"Meta\")</li>\n<li>CommandOrControl (or \"CmdOrCtrl\") for Cmd on Mac, Ctrl otherwise.</li>\n</ul>\n\n\n<p><em>All these names are case insensitive and will be stored in upper case internally.</em></p>\n\n<p>For example:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyChartPanel', {\n     extend: '<a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>',\n\n     mixins: [\n         '<a href=\"#!/api/Ext.mixin.Keyboard\" rel=\"Ext.mixin.Keyboard\" class=\"docClass\">Ext.mixin.Keyboard</a>'\n     ],\n\n     controller: 'mycontroller',\n\n     // Map keys to methods (typically in a ViewController):\n     keyMap: {\n         ENTER: 'onEnterKey',\n\n         \"ALT+PRINT_SCREEN\": 'doScreenshot',\n\n         // Cmd on Mac OS X, Ctrl on Windows/Linux.\n         \"CmdOrCtrl+C\": 'doCopy',\n\n         // This one is handled by a class method.\n         ESC: {\n             handler: 'destroy',\n             scope: 'this',\n             event: 'keypress'  // default would be keydown\n         },\n\n         \"ALT+DOWN\": 'openExpander',\n\n         // Match any key modifiers and invoke before any other DOWN keys\n         // handlers with lower or default priority.\n         \"*+DOWN\": {\n             handler: 'preprocessDownKey',\n             priority: 100\n         }\n     }\n });\n</code></pre>\n\n<p>The method names are interpreted in the same way that event listener names are\ninterpreted.</p>\n        <p>Available since: <b>6.2.0</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-keyMap' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-cfg-keyMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-cfg-keyMap' class='name expandable'>keyMap</a> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"></span></div><div class='description'><div class='short'>An object containing handlers for keyboard events. ...</div><div class='long'><p>An object containing handlers for keyboard events. The property names of this\nobject are the key name and any modifiers. The values of the properties are the\ndescriptors of how to handle each event.</p>\n\n<p>The handler descriptor can be simply the handler function (either the\nliteral function or the method name), or it can be an object with these\nproperties:</p>\n\n<ul>\n<li><code>handler</code>: The function or its name to call to handle the event.</li>\n<li><code>scope</code>: The this pointer context (can be \"this\" or \"controller\").</li>\n<li><code>event</code>: An optional override of the key event to which to listen.</li>\n</ul>\n\n\n<p><strong>Important:</strong> Calls to <code>setKeyMap</code> do not replace the entire <code>keyMap</code> but\ninstead update the provided mappings. That is, unless <code>null</code> is passed as the\nvalue of the <code>keyMap</code> which will clear the <code>keyMap</code> of all entries.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<ul><li><span class='pre'>scope</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>The default scope to apply to key handlers\nwhich do not specify a scope. This is processed the same way as the scope of\nlisteners. It defaults to the <code>\"controller\"</code>, but using <code>'this'</code>\nmeans that an instance method will be used.</p>\n\n\n\n</div></li></ul></div></div></div><div id='cfg-keyMapEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-cfg-keyMapEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-cfg-keyMapEnabled' class='name expandable'>keyMapEnabled</a> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Enables or disables processing keys in the keyMap. ...</div><div class='long'><p>Enables or disables processing keys in the <code>keyMap</code>. This value starts as\n<code>null</code> and if it is <code>null</code> when <code>initKeyMap</code> is called, it will automatically\nbe set to <code>true</code>. Since <code>initKeyMap</code> is called by <code><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></code> at the\nproper time, this is not something application code normally handles.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n</div></div></div><div id='cfg-keyMapTarget' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-cfg-keyMapTarget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-cfg-keyMapTarget' class='name expandable'>keyMapTarget</a> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>The name of the member that should be used to listen for keydown/keypress events. ...</div><div class='long'><p>The name of the member that should be used to listen for keydown/keypress events.\nThis is intended to be controlled at the class level not per instance.</p>\n<p>Defaults to: <code>&#39;el&#39;</code></p>        <p>Available since: <b>ExtJs 6.5.2</b></p>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance properties</h3><div id='property-S-className' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-S-className' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-S-className' class='name expandable'>$className</a> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&#39;Ext.Base&#39;</code></p>        <p>Available since: <b>ExtJs 6.5.2</b></p>\n</div></div></div><div id='property-S-configPrefixed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-S-configPrefixed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-S-configPrefixed' class='name expandable'>$configPrefixed</a> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...</div><div class='long'><p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n<p>Defaults to: <code>true</code></p>        <p>Available since: <b>5.0.0</b></p>\n<p>Overrides: <a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>, <a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>, <a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>, <a href=\"#!/api/Ext.plugin.Abstract-property-S-configPrefixed\" rel=\"Ext.plugin.Abstract-property-S-configPrefixed\" class=\"docClass\">Ext.plugin.Abstract.$configPrefixed</a>, <a href=\"#!/api/Ext.data.proxy.Proxy-property-S-configPrefixed\" rel=\"Ext.data.proxy.Proxy-property-S-configPrefixed\" class=\"docClass\">Ext.data.proxy.Proxy.$configPrefixed</a>, <a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a></p></div></div></div><div id='property-S-configStrict' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-S-configStrict' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-S-configStrict' class='name expandable'>$configStrict</a> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...</div><div class='long'><p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n<p>Defaults to: <code>true</code></p>        <p>Available since: <b>5.0.0</b></p>\n<p>Overrides: <a href=\"#!/api/Ext.data.AbstractStore-property-S-configStrict\" rel=\"Ext.data.AbstractStore-property-S-configStrict\" class=\"docClass\">Ext.data.AbstractStore.$configStrict</a>, <a href=\"#!/api/Ext.Component-property-S-configStrict\" rel=\"Ext.Component-property-S-configStrict\" class=\"docClass\">Ext.Component.$configStrict</a>, <a href=\"#!/api/Ext.layout.Layout-property-S-configStrict\" rel=\"Ext.layout.Layout-property-S-configStrict\" class=\"docClass\">Ext.layout.Layout.$configStrict</a>, <a href=\"#!/api/Ext.plugin.Abstract-property-S-configStrict\" rel=\"Ext.plugin.Abstract-property-S-configStrict\" class=\"docClass\">Ext.plugin.Abstract.$configStrict</a>, <a href=\"#!/api/Ext.draw.sprite.Sprite-property-S-configStrict\" rel=\"Ext.draw.sprite.Sprite-property-S-configStrict\" class=\"docClass\">Ext.draw.sprite.Sprite.$configStrict</a>, <a href=\"#!/api/Ext.Widget-property-S-configStrict\" rel=\"Ext.Widget-property-S-configStrict\" class=\"docClass\">Ext.Widget.$configStrict</a>, <a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configStrict\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configStrict\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configStrict</a></p></div></div></div><div id='property-clearPropertiesOnDestroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-clearPropertiesOnDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-clearPropertiesOnDestroy' class='name expandable'>clearPropertiesOnDestroy</a> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/\"async\"<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Setting this property to false will prevent nulling object references\non a Class instance after destruction. ...</div><div class='long'><p>Setting this property to <code>false</code> will prevent nulling object references\non a Class instance after destruction. Setting this to <code>\"async\"</code> will delay\nthe clearing for approx 50ms.</p>\n<p>Defaults to: <code>true</code></p>        <p>Available since: <b>6.2.0</b></p>\n<p>Overrides: <a href=\"#!/api/Ext.Component-property-clearPropertiesOnDestroy\" rel=\"Ext.Component-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Component.clearPropertiesOnDestroy</a>, <a href=\"#!/api/Ext.Widget-property-clearPropertiesOnDestroy\" rel=\"Ext.Widget-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Widget.clearPropertiesOnDestroy</a></p></div></div></div><div id='property-clearPrototypeOnDestroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-clearPrototypeOnDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-clearPrototypeOnDestroy' class='name expandable'>clearPrototypeOnDestroy</a> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Setting this property to true will result in setting the object's\nprototype to null after the destruction sequence is...</div><div class='long'><p>Setting this property to <code>true</code> will result in setting the object's\nprototype to <code>null</code> after the destruction sequence is fully completed.\nAfter that, most attempts at calling methods on the object instance\nwill result in \"method not defined\" exception. This can be very helpful\nwith tracking down otherwise hard to find bugs like runaway Ajax requests,\ntimed functions not cleared on destruction, etc.</p>\n\n<p>Note that this option can only work in browsers that support <code>Object.setPrototypeOf</code>\nmethod, and is only available in debugging mode.</p>\n<p>Defaults to: <code>false</code></p>        <p>Available since: <b>6.2.0</b></p>\n</div></div></div><div id='property-destroyed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-destroyed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-destroyed' class='name expandable'>destroyed</a> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>This property is set to true after the destroy method is called. ...</div><div class='long'><p>This property is set to <code>true</code> after the <code>destroy</code> method is called.</p>\n<p>Defaults to: <code>false</code></p>        <p>Available since: <b>ExtJs 6.5.2</b></p>\n</div></div></div><div id='property-isConfiguring' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-isConfiguring' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-isConfiguring' class='name expandable'>isConfiguring</a> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><span class=\"signature\"><span class='protected' >protected</span><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>This property is set to true during the call to initConfig. ...</div><div class='long'><p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n<p>Defaults to: <code>false</code></p>        <p>Available since: <b>5.0.0</b></p>\n</div></div></div><div id='property-isFirstInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-isFirstInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-isFirstInstance' class='name expandable'>isFirstInstance</a> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><span class=\"signature\"><span class='protected' >protected</span><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>This property is set to true if this instance is the first of its class. ...</div><div class='long'><p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n<p>Defaults to: <code>false</code></p>        <p>Available since: <b>5.0.0</b></p>\n</div></div></div><div id='property-isInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-isInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-isInstance' class='name expandable'>isInstance</a> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><span class=\"signature\"><span class='protected' >protected</span><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>This value is true and is used to identify plain objects from instances of\na defined class. ...</div><div class='long'><p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n<p>Defaults to: <code>true</code></p>        <p>Available since: <b>ExtJs 6.5.2</b></p>\n</div></div></div><div id='property-mixinConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-property-mixinConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-property-mixinConfig' class='name expandable'>mixinConfig</a> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{id: &#39;keyboard&#39;}</code></p>        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<p>Overrides: <a href=\"#!/api/Ext.mixin.Accessible-property-mixinConfig\" rel=\"Ext.mixin.Accessible-property-mixinConfig\" class=\"docClass\">Ext.mixin.Accessible.mixinConfig</a>, <a href=\"#!/api/Ext.mixin.ComponentDelegation-property-mixinConfig\" rel=\"Ext.mixin.ComponentDelegation-property-mixinConfig\" class=\"docClass\">Ext.mixin.ComponentDelegation.mixinConfig</a></p></div></div></div><div id='property-privates' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-property-privates' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-property-privates' class='name expandable'>privates</a> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<p>Overrides: <a href=\"#!/api/Ext.mixin.Accessible-property-privates\" rel=\"Ext.mixin.Accessible-property-privates\" class=\"docClass\">Ext.mixin.Accessible.privates</a>, <a href=\"#!/api/Ext.mixin.Pluggable-property-privates\" rel=\"Ext.mixin.Pluggable-property-privates\" class=\"docClass\">Ext.mixin.Pluggable.privates</a></p></div></div></div><div id='property-self' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-self' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-self' class='name expandable'>self</a> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Get the reference to the current class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n</div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static properties</h3><div id='static-property-S-onExtended' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-property-S-onExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-property-S-onExtended' class='name expandable'>$onExtended</a> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[]</code></p>        <p>Available since: <b>ExtJs 6.5.2</b></p>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-addDeprecations' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-addDeprecations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-addDeprecations' class='name expandable'>addDeprecations</a>( <span class='pre'>deprecations</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>This method applies a versioned, deprecation declaration to this class. ...</div><div class='long'><p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>deprecations</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='method-applyKeyMap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-method-applyKeyMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-method-applyKeyMap' class='name expandable'>applyKeyMap</a>( <span class='pre'>keyMap, existingKeyMap</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyMap</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li><li><span class='pre'>existingKeyMap</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='method-callOverridden' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-callOverridden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callOverridden' class='name expandable'>callOverridden</a>( <span class='pre'>args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='deprecated' >deprecated</span><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...</div><div class='long'><p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> since 4.1.0</p>\n        <p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>Returns the result of calling the overridden method</p>\n</div></li></ul></div></div></div><div id='method-callParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-callParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callParent' class='name expandable'>callParent</a>( <span class='pre'>args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Call the \"parent\" method of the current method. ...</div><div class='long'><p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static and private methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     // privates: {\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     // privates: {\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>Returns the result of calling the parent method</p>\n</div></li></ul></div></div></div><div id='method-callSuper' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-callSuper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callSuper' class='name expandable'>callSuper</a>( <span class='pre'>args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>This method is used by an override to call the superclass method but\nbypass any overridden method. ...</div><div class='long'><p>This method is used by an <strong>override</strong> to call the superclass method but\nbypass any overridden method. This is often done to \"patch\" a method that\ncontains a bug but for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> to call the superclass\n<code>method</code> since that would call the overridden method containing the bug. In\nother words, the above patch would only produce \"Fixed\" then \"Good\" in the\nconsole log, whereas, using <code>callParent</code> would produce \"Fixed\" then \"Bad\"\nthen \"Good\".</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>Returns the result of calling the superclass method</p>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to cleanup an object and its resources. ...</div><div class='long'><p>This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further in any way, including\naccess to its methods and properties.</p>\n\n<p>To prevent potential memory leaks, all object references will be nulled\nat the end of destruction sequence, unless <a href=\"#!/api/Ext.Base-property-clearPropertiesOnDestroy\" rel=\"Ext.Base-property-clearPropertiesOnDestroy\" class=\"docClass\">clearPropertiesOnDestroy</a>\nis set to <code>false</code>.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<p>Overrides: <a href=\"#!/api/Ext.mixin.Observable-method-destroy\" rel=\"Ext.mixin.Observable-method-destroy\" class=\"docClass\">Ext.mixin.Observable.destroy</a>, <a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>, <a href=\"#!/api/Ext.state.Stateful-method-destroy\" rel=\"Ext.state.Stateful-method-destroy\" class=\"docClass\">Ext.state.Stateful.destroy</a>, <a href=\"#!/api/Ext.data.AbstractStore-method-destroy\" rel=\"Ext.data.AbstractStore-method-destroy\" class=\"docClass\">Ext.data.AbstractStore.destroy</a>, <a href=\"#!/api/Ext.util.AbstractMixedCollection-method-destroy\" rel=\"Ext.util.AbstractMixedCollection-method-destroy\" class=\"docClass\">Ext.util.AbstractMixedCollection.destroy</a>, <a href=\"#!/api/Ext.Component-method-destroy\" rel=\"Ext.Component-method-destroy\" class=\"docClass\">Ext.Component.destroy</a>, <a href=\"#!/api/Ext.data.proxy.Server-method-destroy\" rel=\"Ext.data.proxy.Server-method-destroy\" class=\"docClass\">Ext.data.proxy.Server.destroy</a>, <a href=\"#!/api/Ext.app.BaseController-method-destroy\" rel=\"Ext.app.BaseController-method-destroy\" class=\"docClass\">Ext.app.BaseController.destroy</a>, <a href=\"#!/api/Ext.Widget-method-destroy\" rel=\"Ext.Widget-method-destroy\" class=\"docClass\">Ext.Widget.destroy</a>, <a href=\"#!/api/Ext.plugin.Abstract-method-destroy\" rel=\"Ext.plugin.Abstract-method-destroy\" class=\"docClass\">Ext.plugin.Abstract.destroy</a></p></div></div></div><div id='method-destroyMembers' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-destroyMembers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-destroyMembers' class='name expandable'>destroyMembers</a>( <span class='pre'>args</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Destroys member properties by name. ...</div><div class='long'><p>Destroys member properties by name.</p>\n\n<p>If a property name is the name of a <em>config</em>, the getter is <em>not</em> invoked, so\nif the config has not been initialized, nothing will be done.</p>\n\n<p>The property will be destroyed, and the corrected name (if the property is a <em>config</em>\nand config names are prefixed) will set to <code>null</code> in this object's dictionary.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...<div class='sub-desc'><p>One or more names of the properties to destroy and remove from the object.</p>\n</div></li></ul></div></div></div><div id='method-disableKeyMapGroup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-method-disableKeyMapGroup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-method-disableKeyMapGroup' class='name expandable'>disableKeyMapGroup</a>( <span class='pre'>group</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>group</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='method-enableKeyMapGroup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-method-enableKeyMapGroup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-method-enableKeyMapGroup' class='name expandable'>enableKeyMapGroup</a>( <span class='pre'>group</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>group</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='method-getConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-getConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getConfig' class='name expandable'>getConfig</a>( <span class='pre'>[name], [peek], [ifInitialized]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a specified config property value. ...</div><div class='long'><p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>The name of the config property to get.</p>\n</div></li><li><span class='pre'>peek</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p><code>true</code> to peek at the raw value without calling the getter.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>ifInitialized</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p><code>true</code> to only return the initialized property value,\nnot the raw config value, and <em>not</em> to trigger initialization. Returns <code>undefined</code> if the\nproperty has not yet been initialized.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>The config property value.</p>\n</div></li></ul></div></div></div><div id='method-getCurrentConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-getCurrentConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getCurrentConfig' class='name expandable'>getCurrentConfig</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n</div></div></div><div id='method-getInitialConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-getInitialConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getInitialConfig' class='name expandable'>getInitialConfig</a>( <span class='pre'>[name]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the initial configuration passed to the constructor when\ninstantiating this class. ...</div><div class='long'><p>Returns the initial configuration passed to the constructor when\ninstantiating this class.</p>\n\n<p>Given this example <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a> definition and instance:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.view.Button', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n    xtype: 'mybutton',\n\n    scale: 'large',\n    enableToggle: true\n});\n\nvar btn = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'mybutton',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    text: 'Test Button'\n});\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig()</code> would return an object including the config\noptions passed to the <code>create</code> method:</p>\n\n<pre><code>xtype: 'mybutton',\nrenderTo: // The document body itself\ntext: 'Test Button'\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig('text')</code>returns <strong>'Test Button'</strong>.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>Name of the config option to return.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed</span><div class='sub-desc'><p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n</div></li></ul></div></div></div><div id='method-getKeyMap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-cfg-keyMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-method-getKeyMap' class='name expandable'>getKeyMap</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value of keyMap. ...</div><div class='long'><p>Returns the value of <a href=\"#!/api/Ext.mixin.Keyboard-cfg-keyMap\" rel=\"Ext.mixin.Keyboard-cfg-keyMap\" class=\"docClass\">keyMap</a>.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<ul><li><span class='pre'>scope</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>The default scope to apply to key handlers\nwhich do not specify a scope. This is processed the same way as the scope of\nlisteners. It defaults to the <code>\"controller\"</code>, but using <code>'this'</code>\nmeans that an instance method will be used.</p>\n\n\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getKeyMapEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-cfg-keyMapEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-method-getKeyMapEnabled' class='name expandable'>getKeyMapEnabled</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value of keyMapEnabled. ...</div><div class='long'><p>Returns the value of <a href=\"#!/api/Ext.mixin.Keyboard-cfg-keyMapEnabled\" rel=\"Ext.mixin.Keyboard-cfg-keyMapEnabled\" class=\"docClass\">keyMapEnabled</a>.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-hasConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-hasConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-hasConfig' class='name expandable'>hasConfig</a>( <span class='pre'>name</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-initConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-initConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-initConfig' class='name expandable'>initConfig</a>( <span class='pre'>instanceConfig</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='chainable' >chainable</span><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Initialize configuration for this class. ...</div><div class='long'><p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>instanceConfig</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n\n</div></li></ul></div></div></div><div id='method-initKeyMap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-method-initKeyMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-method-initKeyMap' class='name expandable'>initKeyMap</a>( <span class='pre'></span> )<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>This method should be called when the instance is ready to start listening for\nkeyboard events. ...</div><div class='long'><p>This method should be called when the instance is ready to start listening for\nkeyboard events. This is called automatically for <code><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></code> and derived\nclasses. This is done after the component is rendered.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n</div></div></div><div id='method-link' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-link' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-link' class='name expandable'>link</a>( <span class='pre'>name, value</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi...</div><div class='long'><p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code>method!destroy</code>).</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'>\n</div></li><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>The <code>value</code> passed.</p>\n\n</div></li></ul></div></div></div><div id='method-onClassExtended' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Mixin' rel='Ext.Mixin' class='defined-in docClass'>Ext.Mixin</a><br/><a href='source/Mixin.html#Ext-Mixin-method-onClassExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Mixin-method-onClassExtended' class='name expandable'>onClassExtended</a>( <span class='pre'>cls, data</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cls</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li><li><span class='pre'>data</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><p>Overrides: <a href=\"#!/api/Ext.mixin.Observable-method-onClassExtended\" rel=\"Ext.mixin.Observable-method-onClassExtended\" class=\"docClass\">Ext.mixin.Observable.onClassExtended</a>, <a href=\"#!/api/Ext.data.ProxyStore-method-onClassExtended\" rel=\"Ext.data.ProxyStore-method-onClassExtended\" class=\"docClass\">Ext.data.ProxyStore.onClassExtended</a>, <a href=\"#!/api/Ext.Evented-method-onClassExtended\" rel=\"Ext.Evented-method-onClassExtended\" class=\"docClass\">Ext.Evented.onClassExtended</a>, <a href=\"#!/api/Ext.draw.sprite.Sprite-method-onClassExtended\" rel=\"Ext.draw.sprite.Sprite-method-onClassExtended\" class=\"docClass\">Ext.draw.sprite.Sprite.onClassExtended</a>, <a href=\"#!/api/Ext.plugin.Abstract-method-onClassExtended\" rel=\"Ext.plugin.Abstract-method-onClassExtended\" class=\"docClass\">Ext.plugin.Abstract.onClassExtended</a></p></div></div></div><div id='method-setConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-setConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-setConfig' class='name expandable'>setConfig</a>( <span class='pre'>name, [value], [options]</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Sets a single/multiple configuration options. ...</div><div class='long'><p>Sets a single/multiple configuration options.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The name of the property to set, or a set of key value pairs to set.</p>\n</div></li><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>The value to set for the name parameter.</p>\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>(private)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n\n\n\n</div></li></ul></div></div></div><div id='method-setKeyMap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-cfg-keyMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-method-setKeyMap' class='name expandable'>setKeyMap</a>( <span class='pre'>keyMap</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the value of keyMap. ...</div><div class='long'><p>Sets the value of <a href=\"#!/api/Ext.mixin.Keyboard-cfg-keyMap\" rel=\"Ext.mixin.Keyboard-cfg-keyMap\" class=\"docClass\">keyMap</a>.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyMap</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The new value.</p>\n</div></li></ul><ul><li><span class='pre'>scope</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>The default scope to apply to key handlers\nwhich do not specify a scope. This is processed the same way as the scope of\nlisteners. It defaults to the <code>\"controller\"</code>, but using <code>'this'</code>\nmeans that an instance method will be used.</p>\n\n\n\n</div></li></ul></div></div></div><div id='method-setKeyMapEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-cfg-keyMapEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-method-setKeyMapEnabled' class='name expandable'>setKeyMapEnabled</a>( <span class='pre'>keyMapEnabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the value of keyMapEnabled. ...</div><div class='long'><p>Sets the value of <a href=\"#!/api/Ext.mixin.Keyboard-cfg-keyMapEnabled\" rel=\"Ext.mixin.Keyboard-cfg-keyMapEnabled\" class=\"docClass\">keyMapEnabled</a>.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyMapEnabled</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>The new value.</p>\n</div></li></ul></div></div></div><div id='method-setKeyMapGroupEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-method-setKeyMapGroupEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-method-setKeyMapGroupEnabled' class='name expandable'>setKeyMapGroupEnabled</a>( <span class='pre'>group, state</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>group</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li><li><span class='pre'>state</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='method-statics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-statics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-statics' class='name expandable'>statics</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Get the reference to the class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-unlink' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-unlink' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-unlink' class='name expandable'>unlink</a>( <span class='pre'>names</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='chainable' >chainable</span><span class='private' >private</span></span></div><div class='description'><div class='short'>Destroys a given set of linked objects. ...</div><div class='long'><p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>names</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>The names of the linked objects to destroy.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-updateKeyMapEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.mixin.Keyboard'>Ext.mixin.Keyboard</span><br/><a href='source/Keyboard.html#Ext-mixin-Keyboard-method-updateKeyMapEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.mixin.Keyboard-method-updateKeyMapEnabled' class='name expandable'>updateKeyMapEnabled</a>( <span class='pre'>enabled</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-addConfig' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-addConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addConfig' class='name expandable'>addConfig</a>( <span class='pre'>config, [mixinClass]</span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Adds new config properties to this class. ...</div><div class='long'><p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>mixinClass</span> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a> (optional)<div class='sub-desc'><p>The mixin class if the configs are from a mixin.</p>\n</div></li></ul></div></div></div><div id='static-method-addInheritableStatics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-addInheritableStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addInheritableStatics' class='name expandable'>addInheritableStatics</a>( <span class='pre'>members</span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-addMember' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-addMember' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addMember' class='name expandable'>addMember</a>( <span class='pre'>name, member</span> )<span class=\"signature\"><span class='chainable' >chainable</span><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>member</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-addMembers' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-addMembers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addMembers' class='name expandable'>addMembers</a>( <span class='pre'>members, [isStatic], [privacy]</span> )<span class=\"signature\"><span class='chainable' >chainable</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Add methods / properties to the prototype of this class. ...</div><div class='long'><p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The members to add to this class.</p>\n</div></li><li><span class='pre'>isStatic</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>Pass <code>true</code> if the members are static.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>privacy</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></div></div><div id='static-method-addStatics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-addStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addStatics' class='name expandable'>addStatics</a>( <span class='pre'>members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='chainable' >chainable</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Add / override static properties of this class. ...</div><div class='long'><p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-borrow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-borrow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-borrow' class='name expandable'>borrow</a>( <span class='pre'>fromClass, members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Borrow another class' members to the prototype of this class. ...</div><div class='long'><p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fromClass</span> : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><div class='sub-desc'><p>The class to borrow members from</p>\n</div></li><li><span class='pre'>members</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The names of the members to borrow</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-callParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-callParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-callParent' class='name expandable'>callParent</a>( <span class='pre'>args</span> )<span class=\"signature\"><span class='protected' >protected</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='static-method-callSuper' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-callSuper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-callSuper' class='name expandable'>callSuper</a>( <span class='pre'>args</span> )<span class=\"signature\"><span class='protected' >protected</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='static-method-create' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-create' class='name expandable'>create</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Create a new instance of this Class. ...</div><div class='long'><p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>the created instance.</p>\n</div></li></ul></div></div></div><div id='static-method-createAlias' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-createAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-createAlias' class='name expandable'>createAlias</a>( <span class='pre'>alias, origin</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Create aliases for existing prototype methods. ...</div><div class='long'><p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n</div></li><li><span class='pre'>origin</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The original method name</p>\n</div></li></ul></div></div></div><div id='static-method-extend' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-extend' class='name expandable'>extend</a>( <span class='pre'>parentClass</span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parentClass</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-getConfigurator' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-getConfigurator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-getConfigurator' class='name expandable'>getConfigurator</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a><span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns the Ext.Configurator for this class. ...</div><div class='long'><p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-getName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Get the current class' name in string format. ...</div><div class='long'><p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>className</p>\n</div></li></ul></div></div></div><div id='static-method-mixin' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-mixin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-mixin' class='name expandable'>mixin</a>( <span class='pre'>name, mixinClass</span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Used internally by the mixins pre-processor ...</div><div class='long'><p>Used internally by the mixins pre-processor</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li><li><span class='pre'>mixinClass</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='static-method-onExtended' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-onExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-onExtended' class='name expandable'>onExtended</a>( <span class='pre'>fn, scope</span> )<span class=\"signature\"><span class='chainable' >chainable</span><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='static-method-override' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-override' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-override' class='name expandable'>override</a>( <span class='pre'>members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Override members of this class. ...</div><div class='long'><p>Override members of this class. Overridden methods can be invoked via\nmethod!callParent.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this class</p>\n</div></li></ul></div></div></div><div id='static-method-triggerExtended' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-triggerExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-triggerExtended' class='name expandable'>triggerExtended</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>ExtJs 6.5.2</b></p>\n</div></div></div></div></div></div></div>","meta":{}});